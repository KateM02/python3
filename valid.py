import re

class validator:

    def __init__(self):
        pass

    def check_email(email: str) -> bool:
        """
                Выполняет проверку корректности адреса электронной почты.
                Если в строке присутствуют пробелы, запятые, двойные точки,
                а также неверно указан домен адреса, то будет возвращено False.

                Parameters
                ----------
                  email : str
                    Строка с проверяемым электронным адресом

                Returns
                -------
                  bool:
                    Булевый результат проверки на корректность
        """
        pattern = "^[^\s@]+@([^\s@.,]+\.)+[^\s@.,]{2,}$"
        if re.match(pattern, email):
            return True
        return False

    def check_height(height: str) -> bool:
        """
                Выполняет проверку корректности роста
                Если значение роста не строковое, состоит из букв, разделено (,), или 1<x<3 то будет ворвращено False

                Параметры
                ---------
                  height : str
                    Параметр для проверки корректности

                Return
                ------
                  bool:
                    Булевый результат на коррестность
        """
        if type(height) != str:
            return False
        if re.findall(',|[a-zA-Z]|[а-яёА-ЯЁ]]', height):
            return False
        if float(height) < 1.00 or float(height) > 2.30:
            return False
        return True

    def check_inn(inn: str) -> bool:
        """
                Выполняет проверку корректности ИНН
                Если ИНН не состоит из последовательности 12 цифр то будет возвращено False

                Параметры
                ---------
                  inn : str
                    Строка для проверки корректности

                Return
                ------
                  bool:
                    Булевый результат на корректность
        """
        if type(inn) != str:
            return False
        if len(inn) == 12:
            return True
        return False

    def check_passport_number(passport_number: int) -> bool:
        """
                Выполняет проверку корректности номера паспорта
                Если серия паспорта не состоит из последовательности 6 цифр то будет возвращено False

                Параметры
                ---------
                passport_number : int
                    Целое число для проверки корректности

                Return
                ------
                    bool:
                    Булевый результат на корректность
        """
        if type(passport_number) != int:
            return False
        if passport_number >= 100000 and passport_number <= 999999:
            return True
        return False

    def check_university(university: str) -> bool:
        """
                Выполняет проверку типа данных параметра
                Если пераметр не имеет тип данных str возвращено False

                Параметры
                ---------
                string:
                    Параметр для проверки типа данных

                Return
                ------
                bool:
                    Булевый результат на корректность
        """
        a = ['Филиал Академии Генеральной прокуратуры РФ', 'Госуниверситет гражданской авиации',
             'Университет аэрокосмического приборостроения',
             'Государственный технологический университет им. К.Э.Циолковского',
             'Филиал Российской академии правосудия', 'Госуниверситет нефти и газа имени Губкина',
             'Государственная морская академия имени адмирала С.О. Макарова', 'МГУ им. Ломоносова',
             'Санкт-Петербургский государственный политехнический университет',
             'Санкт-Петербургский государственный архитектурно-строительный университет',
             'Томский национальный исследовательский политех', 'СПбГУ', 'Московский авиационный институт',
             'САУ им. С.П. Королева', 'Новосибирский технический госуниверситет',
             'Ульяновский высший авиационный институт гражданской авиации',
             'Санкт-Петербургский политехнический университет', 'Бауманское МГТУ',
             'Авиационно-технический университетАвиационно-технический университет', 'МФТИ',
             'Филиал Российской правовой академии']
        if university not in a:
            return False
        if type(university) != str:
            return False
        return True
    def check_age(age: int) -> bool:
        """
                Выполняет проверку корректности возроста
                Если значение возроста не типа int или 20<x<90 то будет ворвращено False

                Параметры
                ---------
                  age : int
                    Параметр для проверки корректности

                Return
                ------
                  bool:
                    Булевый результат на коррестность
                """
        if type(age) != int:
            return False
        if age > 90 or age < 20:
            return False
        return True

    def check_political_views(political_views: str) -> bool:
        """
                Выполняет проверку типа данных параметра
                Если пераметр не имеет тип данных str возвращено False

                Параметры
                ---------
                string:
                    Параметр для проверки типа данных

                Return
                ------
                bool:
                    Булевый результат на корректность
        """
        if type(political_views) != str:
            return False
        a = ['Умеренные', 'Консервативные', 'Социалистические', 'Анархистские', 'Либеральные', 'Коммунистические',
             'Либертарианские', 'Индифферентные']
        if political_views not in a:
            return False
        return True

    def check_worldview(worldview: str) -> bool:
        """
                Выполняет проверку типа данных параметра
                Если пераметр не имеет тип данных str возвращено False

                Параметры
                ---------
                string:
                    Параметр для проверки типа данных

                Return
                ------
                bool:
                    Булевый результат на корректность
        """
        if type(worldview) != str:
            return False
        a = ["Агностицизм", "Атеизм", "Секулярный гуманизм", "Католицизм", "Конфуцианство", "Иудаизм", "Деизм",
             "Пантеизм", "Буддизм"]
        if worldview not in a:
            return False
        return True

    def check_address(address: str) -> bool:
        """
                Выполняет проверку корректности адреса
                Если адрес не типа str или указан не в формате "улица пробел номер дома" то возвращено False

                Параметры
                ---------
                address:
                    Параметр для проверки корректности

                Return
                ------
                bool:
                    Булевый результат на корректность
        """
        if type(address) == str:
            pattern = '[а-яА-Я.\s\d-]+\s+[0-9]+$'
            if re.match(pattern, address):
                return True
        return False
